# Circle CI used only for tests. Build is done through Github actions

version: 2.1

jobs:
  setup_and_test:
    # Configuration for the setup job.
    resource_class: large

    docker:
      - image: cimg/ruby:3.2.2-node
        environment:
          PGHOST: 127.0.0.1
          PGUSER: inventory
          RAILS_ENV: test
          BUNDLER_VERSION: 2.4.17
      - image: cimg/postgres:15.1
        environment:
          POSTGRES_USER: inventory
          POSTGRES_DB: inventory_test
          POSTGRES_PASSWORD: inventory
          RAILS_ENV: test
          
    parallelism: 4

    working_directory: ~/inventory

    steps:
      - checkout

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "Gemfile.lock" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: sudo apt install -y postgresql-client || true

      - run:
          name: Configure Bundler
          command: |
            echo 'export BUNDLER_VERSION=$(cat Gemfile.lock | tail -1 | tr -d " ")' >> $BASH_ENV
            source $BASH_ENV
            gem install bundler

      - run:
          name: Install dependencies
          command: |
            bundle config set --local path 'vendor/bundle'
            bundle install --jobs=4 --retry=3

      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}

      - restore_cache:
          keys:
            - inventory-yarn-cache-{{ .Branch }}-{{ checksum "yarn.lock" }}
            - inventory-yarn-cache-{{ .Branch }}-
            - inventory-yarn-cache-

      - run:
          name: Yarn Install
          command: |
            yarn install

      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m

      - run:
          name: Database setup
          command: |
            bundle exec rails db:test:prepare

      - run:
          name: Rails tests
          command: |
            bundle exec rspec \
              --out rspec_test_results/rspec.xml \
              --format progress \
              $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)

      - run:
          name: Vite tests
          command: |
            yarn test \
              --out vite_test_results/rspec.xml \
              --format progress \
              $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)

      # collect reports
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results

workflows:
  build-and-test:
    jobs:
      - setup_and_test

