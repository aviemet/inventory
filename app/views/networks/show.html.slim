.container
  section
    h1.inline-block = network.name
    .float-right.inline-block
      = link_to 'Edit', edit_network_path(network)
      '  |
      = link_to 'Back', networks_path

    .item-details
      .item-row
        label Network
        .value = "#{network.address}/#{network.address.prefix}"

      .item-row
        label Number of Hosts
        .value = number_with_delimiter(network.address.hosts.count)

      .item-row
        label Network Address:
        .value = network.address.to_s

      .item-row
        label VLAN ID:
        .value = network.vlan_id

      .item-row
        label Gateway:
        .value = network.gateway

      .item-row
        label DHCP Start:
        .value = network.dhcp_start

      .item-row
        label Broadcast Address:
        .value = network.address.broadcast

      .item-row
        label DHCP End:
        .value = network.dhcp_end

  br/

  section
    h2 Addresses

    .flex.flex-wrap.items-start
      - count = network.address.hosts.count
      - 3.times do |n|
        table.border-collapse.border.w-full.md:w-auto.md:flex-1.md:text-sm
          thead.-top-4 class=("hidden md:table-header-group" if n > 0)
            tr
              th.w-28 Address
              th Host
          tbody class=("inverted" if n.odd?)
            - network.address.hosts[((count / 3) * n) + n, (count / 3) + 1].each do |address|
              - ip_lease = @ips.detect { |ip| ip.address == address }
              tr
                td = address
                td = link_to(ip_lease.item, ip_lease.item) if ip_lease
