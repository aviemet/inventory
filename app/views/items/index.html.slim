= render "shared/table/section"

  .flex
    .flex-1
      h1.inline-block Hardware Assets
      .inline-block.text-right.align-top = button_link '+ New Item', new_item_path

    .flex-1
      = render "shared/table/search_input"
    = render "shared/table/column_picker", columns: @hideable_fields
    / TODO: This needs to be a dropdown
    - if @category
      = @category.name.pluralize

  .scroll-content.shadow
    table.table-auto
      thead
        tr
          th = check_box_tag :select_all, "all", false, data: { action: "table#checkAll", target: "table.selectAll" }
          = data_heading :name, hideable: false
          = data_heading "models.name", heading: "Model"
          = data_heading :asset_tag
          = data_heading :serial
          = data_heading "categories.name", heading: "Category"
          = data_heading "manufacturers.name", heading: "Manufacturer"
          = data_heading "vendors.name", heading: "Vendor"
          = data_heading :cost
          = data_heading "departments.name", heading: Department
          th.table-column-fit.text-center Actions
      tbody
        - @items.each do |item|
          tr data-target="table.row"
            td = check_box_tag :selected, item.id, false, data: { action: "table#checked", target: "table.checkbox" }
            = data_cell :name, link_to(item.name, item)
            = data_cell "models.name", link_to(item.model, item.model)
            = data_cell :asset_tag, item.asset_tag ? link_to(item.asset_tag, item) : ''
            = data_cell :serial, item.serial ? link_to(item.serial, item) : ''
            = data_cell "categories.name", link_to(item.category, item.category)
            = data_cell "manufacturers.name", link_to(item.manufacturer, item.manufacturer)
            = data_cell "vendors.name", item.vendor ? link_to(item.vendor, item.vendor) : ''
            = data_cell "cost", item.cost.format
            = data_cell "departments.name", item.department ? link_to(item.department, item.department) : ''
            td nowrap="nowrap"
              .flex.justify-between.gap-1
                = render Buttons::AssignmentButtonComponent.new(asset: item)
                = render "shared/buttons/edit", path: edit_item_path(item)
                = render "shared/buttons/delete", path: item

  .flex.pt-3
    - start_record = ((@items.current_page - 1) * @items.limit_value) + 1
    .flex-1 = "Showing #{start_record} - #{start_record - 1 + @items.count} / #{@items.total_count} Items"
    .flex-1.text-right = paginate @items
