// TypesFromSerializers CacheKey 4d0c929e915cdcb5f52361d88bfca55f
//
// DO NOT MODIFY: This file was automatically generated by TypesFromSerializers.
import type Accessory from '../Accessory'
import type Activity from '../Activity'
import type Assignment from '../Assignment'
import type Category from '../Category'
import type Component from '../Component'
import type Consumable from '../Consumable'
import type Location from '../Location'
import type Department from '../Department'
import type DocumentationsIndex from '../Documentations/Index'
import type Item from '../Item'
import type License from '../License'
import type Manufacturer from '../Manufacturer'
import type Model from '../Model'
import type Nic from '../Nic'
import type StatusLabel from '../StatusLabel'
import type Vendor from '../Vendor'

declare global {
  namespace Schema {
    interface ItemsShow {
      id: number
      accessories: Accessory[]
      activities: Activity[]
      asset_tag?: string
      assigned: boolean
      assignments: Assignment[]
      category: Category
      components: Component[]
      consumables: Consumable[]
      cost: number
      cost_currency: string
      created_at: string | Date
      default_location: Location
      default_location_id?: number
      department: Department
      documentations: DocumentationsIndex[]
      items: Item[]
      licenses: License[]
      location: Location
      manufacturer: Manufacturer
      model: Model
      model_id: number
      name: string
      nics: Nic[]
      notes?: string
      purchased_at?: string | Date
      requestable: boolean
      serial?: string
      status_label: StatusLabel
      updated_at: string | Date
      vendor: Vendor
      vendor_id?: number
    }
  }
}
