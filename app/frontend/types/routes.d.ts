/**
 * File generated by js-routes RubyVariables.GEM_VERSION
 * Based on Rails RubyVariables.RAILS_VERSION routes of RubyVariables.APP_CLASS
 */
declare type Optional<T> = {
    [P in keyof T]?: T[P] | null;
};
declare type BaseRouteParameter = string | boolean | Date | number;
declare type MethodRouteParameter = BaseRouteParameter | (() => BaseRouteParameter);
declare type ModelRouteParameter = {
    id: MethodRouteParameter;
} | {
    to_param: MethodRouteParameter;
} | {
    toParam: MethodRouteParameter;
};
declare type RequiredRouteParameter = BaseRouteParameter | ModelRouteParameter;
declare type OptionalRouteParameter = undefined | null | RequiredRouteParameter;
declare type QueryRouteParameter = OptionalRouteParameter | QueryRouteParameter[] | {
    [k: string]: QueryRouteParameter;
};
declare type RouteParameters = Record<string, QueryRouteParameter>;
declare type Serializable = Record<string, unknown>;
declare type Serializer = (value: Serializable) => string;
declare type RouteHelperExtras = {
    requiredParams(): string[];
    toString(): string;
};
declare type RequiredParameters<T extends number> = T extends 1 ? [RequiredRouteParameter] : T extends 2 ? [RequiredRouteParameter, RequiredRouteParameter] : T extends 3 ? [RequiredRouteParameter, RequiredRouteParameter, RequiredRouteParameter] : T extends 4 ? [
    RequiredRouteParameter,
    RequiredRouteParameter,
    RequiredRouteParameter,
    RequiredRouteParameter
] : RequiredRouteParameter[];
declare type RouteHelperOptions<T extends string> = RouteOptions & Optional<Record<T, OptionalRouteParameter>>;
declare type RouteHelper<T extends number = number, U extends string = string> = ((...args: [...RequiredParameters<T>, RouteHelperOptions<U>]) => string) & RouteHelperExtras;
declare type RouteHelpers = Record<string, RouteHelper>;
declare type Configuration = {
    prefix: string;
    default_url_options: RouteParameters;
    special_options_key: string;
    serializer: Serializer;
};
interface RouterExposedMethods {
    config(): Configuration;
    configure(arg: Partial<Configuration>): Configuration;
    serialize: Serializer;
}
declare type KeywordUrlOptions = Optional<{
    host: string;
    protocol: string;
    subdomain: string;
    port: string | number;
    anchor: string;
    trailing_slash: boolean;
}>;
declare type RouteOptions = KeywordUrlOptions & RouteParameters;
declare type PartsTable = Record<string, {
    r?: boolean;
    d?: OptionalRouteParameter;
}>;
declare type ModuleType = "CJS" | "AMD" | "UMD" | "ESM" | "DTS" | "NIL";
declare const RubyVariables: {
    PREFIX: string;
    DEPRECATED_GLOBBING_BEHAVIOR: boolean;
    SPECIAL_OPTIONS_KEY: string;
    DEFAULT_URL_OPTIONS: RouteParameters;
    SERIALIZER: Serializer;
    ROUTES_OBJECT: RouteHelpers;
    MODULE_TYPE: ModuleType;
    WRAPPER: <T>(callback: T) => T;
};
declare const define: undefined | (((arg: unknown[], callback: () => unknown) => void) & {
    amd?: unknown;
});
declare const module: {
    exports: any;
} | undefined;
export const configure: RouterExposedMethods['configure'];

export const config: RouterExposedMethods['config'];

export const serialize: RouterExposedMethods['serialize'];

/**
 * Generates rails route to
 * /accessories(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const accessories: ((
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /accessories/:id(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const accessory: ((
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /assignments/:id(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const assignment: ((
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /assignments/:asset_type/:asset_id(.:format)
 * @param {any} assetType
 * @param {any} assetId
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const assignments: ((
  assetType: RequiredRouteParameter,
  assetId: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /users/cancel(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const cancelUserRegistration: ((
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /categories(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const categories: ((
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /categories/:id(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const category: ((
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /accessories/category/:category_id(.:format)
 * @param {any} categoryId
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const categoryAccessories: ((
  categoryId: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /components/category/:category_id(.:format)
 * @param {any} categoryId
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const categoryComponents: ((
  categoryId: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /consumables/category/:category_id(.:format)
 * @param {any} categoryId
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const categoryConsumables: ((
  categoryId: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /hardware/category/:category_id(.:format)
 * @param {any} categoryId
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const categoryItems: ((
  categoryId: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /licenses/category/:category_id(.:format)
 * @param {any} categoryId
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const categoryLicenses: ((
  categoryId: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /hardware/:id/clone(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const cloneItems: ((
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /companies(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const companies: ((
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /companies/:id(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const company: ((
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /companies/:company_id/contacts/:id(.:format)
 * @param {any} companyId
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const companyContact: ((
  companyId: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /companies/:company_id/contacts/:contact_id/addresses/:id(.:format)
 * @param {any} companyId
 * @param {any} contactId
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const companyContactAddress: ((
  companyId: RequiredRouteParameter,
  contactId: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /companies/:company_id/contacts/:contact_id/addresses(.:format)
 * @param {any} companyId
 * @param {any} contactId
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const companyContactAddresses: ((
  companyId: RequiredRouteParameter,
  contactId: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /companies/:company_id/contacts/:contact_id/emails/:id(.:format)
 * @param {any} companyId
 * @param {any} contactId
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const companyContactEmail: ((
  companyId: RequiredRouteParameter,
  contactId: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /companies/:company_id/contacts/:contact_id/emails(.:format)
 * @param {any} companyId
 * @param {any} contactId
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const companyContactEmails: ((
  companyId: RequiredRouteParameter,
  contactId: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /companies/:company_id/contacts/:contact_id/phones/:id(.:format)
 * @param {any} companyId
 * @param {any} contactId
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const companyContactPhone: ((
  companyId: RequiredRouteParameter,
  contactId: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /companies/:company_id/contacts/:contact_id/phones(.:format)
 * @param {any} companyId
 * @param {any} contactId
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const companyContactPhones: ((
  companyId: RequiredRouteParameter,
  contactId: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /companies/:company_id/contacts/:contact_id/websites/:id(.:format)
 * @param {any} companyId
 * @param {any} contactId
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const companyContactWebsite: ((
  companyId: RequiredRouteParameter,
  contactId: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /companies/:company_id/contacts/:contact_id/websites(.:format)
 * @param {any} companyId
 * @param {any} contactId
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const companyContactWebsites: ((
  companyId: RequiredRouteParameter,
  contactId: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /companies/:company_id/contacts(.:format)
 * @param {any} companyId
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const companyContacts: ((
  companyId: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /components/:id(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const component: ((
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /components(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const components: ((
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /consumables/:id(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const consumable: ((
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /consumables(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const consumables: ((
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /contracts/:id(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const contract: ((
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /contracts(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const contracts: ((
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /dashboard(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const dashboard: ((
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /departments/:id(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const department: ((
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /departments/:department_id/contacts/:id(.:format)
 * @param {any} departmentId
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const departmentContact: ((
  departmentId: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /departments/:department_id/contacts/:contact_id/addresses/:id(.:format)
 * @param {any} departmentId
 * @param {any} contactId
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const departmentContactAddress: ((
  departmentId: RequiredRouteParameter,
  contactId: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /departments/:department_id/contacts/:contact_id/addresses(.:format)
 * @param {any} departmentId
 * @param {any} contactId
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const departmentContactAddresses: ((
  departmentId: RequiredRouteParameter,
  contactId: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /departments/:department_id/contacts/:contact_id/emails/:id(.:format)
 * @param {any} departmentId
 * @param {any} contactId
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const departmentContactEmail: ((
  departmentId: RequiredRouteParameter,
  contactId: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /departments/:department_id/contacts/:contact_id/emails(.:format)
 * @param {any} departmentId
 * @param {any} contactId
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const departmentContactEmails: ((
  departmentId: RequiredRouteParameter,
  contactId: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /departments/:department_id/contacts/:contact_id/phones/:id(.:format)
 * @param {any} departmentId
 * @param {any} contactId
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const departmentContactPhone: ((
  departmentId: RequiredRouteParameter,
  contactId: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /departments/:department_id/contacts/:contact_id/phones(.:format)
 * @param {any} departmentId
 * @param {any} contactId
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const departmentContactPhones: ((
  departmentId: RequiredRouteParameter,
  contactId: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /departments/:department_id/contacts/:contact_id/websites/:id(.:format)
 * @param {any} departmentId
 * @param {any} contactId
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const departmentContactWebsite: ((
  departmentId: RequiredRouteParameter,
  contactId: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /departments/:department_id/contacts/:contact_id/websites(.:format)
 * @param {any} departmentId
 * @param {any} contactId
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const departmentContactWebsites: ((
  departmentId: RequiredRouteParameter,
  contactId: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /departments/:department_id/contacts(.:format)
 * @param {any} departmentId
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const departmentContacts: ((
  departmentId: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /departments(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const departments: ((
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /logout(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const destroyUserSession: ((
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /accessories/:id/edit(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const editAccessory: ((
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /assignments/:asset_type/:asset_id/:id/edit(.:format)
 * @param {any} assetType
 * @param {any} assetId
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const editAssignment: ((
  assetType: RequiredRouteParameter,
  assetId: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /categories/:id/edit(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const editCategory: ((
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /companies/:id/edit(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const editCompany: ((
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /companies/:company_id/contacts/:id/edit(.:format)
 * @param {any} companyId
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const editCompanyContact: ((
  companyId: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /companies/:company_id/contacts/:contact_id/addresses/:id/edit(.:format)
 * @param {any} companyId
 * @param {any} contactId
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const editCompanyContactAddress: ((
  companyId: RequiredRouteParameter,
  contactId: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /companies/:company_id/contacts/:contact_id/emails/:id/edit(.:format)
 * @param {any} companyId
 * @param {any} contactId
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const editCompanyContactEmail: ((
  companyId: RequiredRouteParameter,
  contactId: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /companies/:company_id/contacts/:contact_id/phones/:id/edit(.:format)
 * @param {any} companyId
 * @param {any} contactId
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const editCompanyContactPhone: ((
  companyId: RequiredRouteParameter,
  contactId: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /companies/:company_id/contacts/:contact_id/websites/:id/edit(.:format)
 * @param {any} companyId
 * @param {any} contactId
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const editCompanyContactWebsite: ((
  companyId: RequiredRouteParameter,
  contactId: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /components/:id/edit(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const editComponent: ((
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /consumables/:id/edit(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const editConsumable: ((
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /contracts/:id/edit(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const editContract: ((
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /departments/:id/edit(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const editDepartment: ((
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /departments/:department_id/contacts/:id/edit(.:format)
 * @param {any} departmentId
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const editDepartmentContact: ((
  departmentId: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /departments/:department_id/contacts/:contact_id/addresses/:id/edit(.:format)
 * @param {any} departmentId
 * @param {any} contactId
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const editDepartmentContactAddress: ((
  departmentId: RequiredRouteParameter,
  contactId: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /departments/:department_id/contacts/:contact_id/emails/:id/edit(.:format)
 * @param {any} departmentId
 * @param {any} contactId
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const editDepartmentContactEmail: ((
  departmentId: RequiredRouteParameter,
  contactId: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /departments/:department_id/contacts/:contact_id/phones/:id/edit(.:format)
 * @param {any} departmentId
 * @param {any} contactId
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const editDepartmentContactPhone: ((
  departmentId: RequiredRouteParameter,
  contactId: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /departments/:department_id/contacts/:contact_id/websites/:id/edit(.:format)
 * @param {any} departmentId
 * @param {any} contactId
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const editDepartmentContactWebsite: ((
  departmentId: RequiredRouteParameter,
  contactId: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /fields/:id/edit(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const editField: ((
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /fieldsets/:id/edit(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const editFieldset: ((
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /fieldset_associations/:id/edit(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const editFieldsetAssociation: ((
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /ip_leases/:id/edit(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const editIpLease: ((
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /hardware/:id/edit(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const editItem: ((
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /hardware/:item_id/nics/:id/edit(.:format)
 * @param {any} itemId
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const editItemNic: ((
  itemId: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /licenses/:id/edit(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const editLicense: ((
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /locations/:id/edit(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const editLocation: ((
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /locations/:location_id/contacts/:id/edit(.:format)
 * @param {any} locationId
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const editLocationContact: ((
  locationId: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /locations/:location_id/contacts/:contact_id/addresses/:id/edit(.:format)
 * @param {any} locationId
 * @param {any} contactId
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const editLocationContactAddress: ((
  locationId: RequiredRouteParameter,
  contactId: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /locations/:location_id/contacts/:contact_id/emails/:id/edit(.:format)
 * @param {any} locationId
 * @param {any} contactId
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const editLocationContactEmail: ((
  locationId: RequiredRouteParameter,
  contactId: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /locations/:location_id/contacts/:contact_id/phones/:id/edit(.:format)
 * @param {any} locationId
 * @param {any} contactId
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const editLocationContactPhone: ((
  locationId: RequiredRouteParameter,
  contactId: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /locations/:location_id/contacts/:contact_id/websites/:id/edit(.:format)
 * @param {any} locationId
 * @param {any} contactId
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const editLocationContactWebsite: ((
  locationId: RequiredRouteParameter,
  contactId: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /manufacturers/:id/edit(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const editManufacturer: ((
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /manufacturers/:manufacturer_id/contacts/:id/edit(.:format)
 * @param {any} manufacturerId
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const editManufacturerContact: ((
  manufacturerId: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /manufacturers/:manufacturer_id/contacts/:contact_id/addresses/:id/edit(.:format)
 * @param {any} manufacturerId
 * @param {any} contactId
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const editManufacturerContactAddress: ((
  manufacturerId: RequiredRouteParameter,
  contactId: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /manufacturers/:manufacturer_id/contacts/:contact_id/emails/:id/edit(.:format)
 * @param {any} manufacturerId
 * @param {any} contactId
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const editManufacturerContactEmail: ((
  manufacturerId: RequiredRouteParameter,
  contactId: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /manufacturers/:manufacturer_id/contacts/:contact_id/phones/:id/edit(.:format)
 * @param {any} manufacturerId
 * @param {any} contactId
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const editManufacturerContactPhone: ((
  manufacturerId: RequiredRouteParameter,
  contactId: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /manufacturers/:manufacturer_id/contacts/:contact_id/websites/:id/edit(.:format)
 * @param {any} manufacturerId
 * @param {any} contactId
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const editManufacturerContactWebsite: ((
  manufacturerId: RequiredRouteParameter,
  contactId: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /models/:id/edit(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const editModel: ((
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /networks/:id/edit(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const editNetwork: ((
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /orders/:id/edit(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const editOrder: ((
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /ownerships/:id/edit(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const editOwnership: ((
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /people/:id/edit(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const editPerson: ((
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /people/:person_id/contacts/:id/edit(.:format)
 * @param {any} personId
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const editPersonContact: ((
  personId: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /people/:person_id/contacts/:contact_id/addresses/:id/edit(.:format)
 * @param {any} personId
 * @param {any} contactId
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const editPersonContactAddress: ((
  personId: RequiredRouteParameter,
  contactId: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /people/:person_id/contacts/:contact_id/emails/:id/edit(.:format)
 * @param {any} personId
 * @param {any} contactId
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const editPersonContactEmail: ((
  personId: RequiredRouteParameter,
  contactId: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /people/:person_id/contacts/:contact_id/phones/:id/edit(.:format)
 * @param {any} personId
 * @param {any} contactId
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const editPersonContactPhone: ((
  personId: RequiredRouteParameter,
  contactId: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /people/:person_id/contacts/:contact_id/websites/:id/edit(.:format)
 * @param {any} personId
 * @param {any} contactId
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const editPersonContactWebsite: ((
  personId: RequiredRouteParameter,
  contactId: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /purchases/:id/edit(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const editPurchase: ((
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /rails/conductor/action_mailbox/inbound_emails/:id/edit(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const editRailsConductorInboundEmail: ((
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /status_types/:id/edit(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const editStatusType: ((
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /users/:id/edit(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const editUser: ((
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /users/password/edit(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const editUserPassword: ((
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /users/edit(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const editUserRegistration: ((
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /vendors/:id/edit(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const editVendor: ((
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /vendors/:vendor_id/contacts/:id/edit(.:format)
 * @param {any} vendorId
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const editVendorContact: ((
  vendorId: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /vendors/:vendor_id/contacts/:contact_id/addresses/:id/edit(.:format)
 * @param {any} vendorId
 * @param {any} contactId
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const editVendorContactAddress: ((
  vendorId: RequiredRouteParameter,
  contactId: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /vendors/:vendor_id/contacts/:contact_id/emails/:id/edit(.:format)
 * @param {any} vendorId
 * @param {any} contactId
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const editVendorContactEmail: ((
  vendorId: RequiredRouteParameter,
  contactId: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /vendors/:vendor_id/contacts/:contact_id/phones/:id/edit(.:format)
 * @param {any} vendorId
 * @param {any} contactId
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const editVendorContactPhone: ((
  vendorId: RequiredRouteParameter,
  contactId: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /vendors/:vendor_id/contacts/:contact_id/websites/:id/edit(.:format)
 * @param {any} vendorId
 * @param {any} contactId
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const editVendorContactWebsite: ((
  vendorId: RequiredRouteParameter,
  contactId: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /warranties/:id/edit(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const editWarranty: ((
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /warranties/:warranty_id/contacts/:id/edit(.:format)
 * @param {any} warrantyId
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const editWarrantyContact: ((
  warrantyId: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /warranties/:warranty_id/contacts/:contact_id/addresses/:id/edit(.:format)
 * @param {any} warrantyId
 * @param {any} contactId
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const editWarrantyContactAddress: ((
  warrantyId: RequiredRouteParameter,
  contactId: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /warranties/:warranty_id/contacts/:contact_id/emails/:id/edit(.:format)
 * @param {any} warrantyId
 * @param {any} contactId
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const editWarrantyContactEmail: ((
  warrantyId: RequiredRouteParameter,
  contactId: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /warranties/:warranty_id/contacts/:contact_id/phones/:id/edit(.:format)
 * @param {any} warrantyId
 * @param {any} contactId
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const editWarrantyContactPhone: ((
  warrantyId: RequiredRouteParameter,
  contactId: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /warranties/:warranty_id/contacts/:contact_id/websites/:id/edit(.:format)
 * @param {any} warrantyId
 * @param {any} contactId
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const editWarrantyContactWebsite: ((
  warrantyId: RequiredRouteParameter,
  contactId: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /checkin/:asset_type/:asset_id(.:format)
 * @param {any} assetType
 * @param {any} assetId
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const endAssignment: ((
  assetType: RequiredRouteParameter,
  assetId: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /fields/:id(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const field: ((
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /fields(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const fields: ((
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /fieldsets/:id(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const fieldset: ((
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /fieldset_associations/:id(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const fieldsetAssociation: ((
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /fieldset_associations(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const fieldsetAssociations: ((
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /fieldsets(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const fieldsets: ((
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /ip_leases/:id(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const ipLease: ((
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /ip_leases(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const ipLeases: ((
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /hardware/:id(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const item: ((
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /hardware/:item_id/nics/:id(.:format)
 * @param {any} itemId
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const itemNic: ((
  itemId: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /hardware/:item_id/nics(.:format)
 * @param {any} itemId
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const itemNics: ((
  itemId: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /hardware(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const items: ((
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /licenses/:id(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const license: ((
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /licenses(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const licenses: ((
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /locations/:id(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const location: ((
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /locations/:location_id/contacts/:id(.:format)
 * @param {any} locationId
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const locationContact: ((
  locationId: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /locations/:location_id/contacts/:contact_id/addresses/:id(.:format)
 * @param {any} locationId
 * @param {any} contactId
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const locationContactAddress: ((
  locationId: RequiredRouteParameter,
  contactId: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /locations/:location_id/contacts/:contact_id/addresses(.:format)
 * @param {any} locationId
 * @param {any} contactId
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const locationContactAddresses: ((
  locationId: RequiredRouteParameter,
  contactId: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /locations/:location_id/contacts/:contact_id/emails/:id(.:format)
 * @param {any} locationId
 * @param {any} contactId
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const locationContactEmail: ((
  locationId: RequiredRouteParameter,
  contactId: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /locations/:location_id/contacts/:contact_id/emails(.:format)
 * @param {any} locationId
 * @param {any} contactId
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const locationContactEmails: ((
  locationId: RequiredRouteParameter,
  contactId: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /locations/:location_id/contacts/:contact_id/phones/:id(.:format)
 * @param {any} locationId
 * @param {any} contactId
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const locationContactPhone: ((
  locationId: RequiredRouteParameter,
  contactId: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /locations/:location_id/contacts/:contact_id/phones(.:format)
 * @param {any} locationId
 * @param {any} contactId
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const locationContactPhones: ((
  locationId: RequiredRouteParameter,
  contactId: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /locations/:location_id/contacts/:contact_id/websites/:id(.:format)
 * @param {any} locationId
 * @param {any} contactId
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const locationContactWebsite: ((
  locationId: RequiredRouteParameter,
  contactId: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /locations/:location_id/contacts/:contact_id/websites(.:format)
 * @param {any} locationId
 * @param {any} contactId
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const locationContactWebsites: ((
  locationId: RequiredRouteParameter,
  contactId: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /locations/:location_id/contacts(.:format)
 * @param {any} locationId
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const locationContacts: ((
  locationId: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /locations(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const locations: ((
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /manufacturers/:id(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const manufacturer: ((
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /manufacturers/:manufacturer_id/contacts/:id(.:format)
 * @param {any} manufacturerId
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const manufacturerContact: ((
  manufacturerId: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /manufacturers/:manufacturer_id/contacts/:contact_id/addresses/:id(.:format)
 * @param {any} manufacturerId
 * @param {any} contactId
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const manufacturerContactAddress: ((
  manufacturerId: RequiredRouteParameter,
  contactId: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /manufacturers/:manufacturer_id/contacts/:contact_id/addresses(.:format)
 * @param {any} manufacturerId
 * @param {any} contactId
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const manufacturerContactAddresses: ((
  manufacturerId: RequiredRouteParameter,
  contactId: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /manufacturers/:manufacturer_id/contacts/:contact_id/emails/:id(.:format)
 * @param {any} manufacturerId
 * @param {any} contactId
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const manufacturerContactEmail: ((
  manufacturerId: RequiredRouteParameter,
  contactId: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /manufacturers/:manufacturer_id/contacts/:contact_id/emails(.:format)
 * @param {any} manufacturerId
 * @param {any} contactId
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const manufacturerContactEmails: ((
  manufacturerId: RequiredRouteParameter,
  contactId: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /manufacturers/:manufacturer_id/contacts/:contact_id/phones/:id(.:format)
 * @param {any} manufacturerId
 * @param {any} contactId
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const manufacturerContactPhone: ((
  manufacturerId: RequiredRouteParameter,
  contactId: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /manufacturers/:manufacturer_id/contacts/:contact_id/phones(.:format)
 * @param {any} manufacturerId
 * @param {any} contactId
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const manufacturerContactPhones: ((
  manufacturerId: RequiredRouteParameter,
  contactId: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /manufacturers/:manufacturer_id/contacts/:contact_id/websites/:id(.:format)
 * @param {any} manufacturerId
 * @param {any} contactId
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const manufacturerContactWebsite: ((
  manufacturerId: RequiredRouteParameter,
  contactId: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /manufacturers/:manufacturer_id/contacts/:contact_id/websites(.:format)
 * @param {any} manufacturerId
 * @param {any} contactId
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const manufacturerContactWebsites: ((
  manufacturerId: RequiredRouteParameter,
  contactId: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /manufacturers/:manufacturer_id/contacts(.:format)
 * @param {any} manufacturerId
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const manufacturerContacts: ((
  manufacturerId: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /manufacturers(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const manufacturers: ((
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /models/:id(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const model: ((
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /models(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const models: ((
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /networks/:id(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const network: ((
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /networks(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const networks: ((
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /accessories/new(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const newAccessory: ((
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /checkout/:asset_type/:asset_id(.:format)
 * @param {any} assetType
 * @param {any} assetId
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const newAssignment: ((
  assetType: RequiredRouteParameter,
  assetId: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /categories/new(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const newCategory: ((
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /companies/new(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const newCompany: ((
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /companies/:company_id/contacts/new(.:format)
 * @param {any} companyId
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const newCompanyContact: ((
  companyId: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /companies/:company_id/contacts/:contact_id/addresses/new(.:format)
 * @param {any} companyId
 * @param {any} contactId
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const newCompanyContactAddress: ((
  companyId: RequiredRouteParameter,
  contactId: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /companies/:company_id/contacts/:contact_id/emails/new(.:format)
 * @param {any} companyId
 * @param {any} contactId
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const newCompanyContactEmail: ((
  companyId: RequiredRouteParameter,
  contactId: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /companies/:company_id/contacts/:contact_id/phones/new(.:format)
 * @param {any} companyId
 * @param {any} contactId
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const newCompanyContactPhone: ((
  companyId: RequiredRouteParameter,
  contactId: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /companies/:company_id/contacts/:contact_id/websites/new(.:format)
 * @param {any} companyId
 * @param {any} contactId
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const newCompanyContactWebsite: ((
  companyId: RequiredRouteParameter,
  contactId: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /components/new(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const newComponent: ((
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /consumables/new(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const newConsumable: ((
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /contracts/new(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const newContract: ((
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /departments/new(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const newDepartment: ((
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /departments/:department_id/contacts/new(.:format)
 * @param {any} departmentId
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const newDepartmentContact: ((
  departmentId: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /departments/:department_id/contacts/:contact_id/addresses/new(.:format)
 * @param {any} departmentId
 * @param {any} contactId
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const newDepartmentContactAddress: ((
  departmentId: RequiredRouteParameter,
  contactId: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /departments/:department_id/contacts/:contact_id/emails/new(.:format)
 * @param {any} departmentId
 * @param {any} contactId
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const newDepartmentContactEmail: ((
  departmentId: RequiredRouteParameter,
  contactId: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /departments/:department_id/contacts/:contact_id/phones/new(.:format)
 * @param {any} departmentId
 * @param {any} contactId
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const newDepartmentContactPhone: ((
  departmentId: RequiredRouteParameter,
  contactId: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /departments/:department_id/contacts/:contact_id/websites/new(.:format)
 * @param {any} departmentId
 * @param {any} contactId
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const newDepartmentContactWebsite: ((
  departmentId: RequiredRouteParameter,
  contactId: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /fields/new(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const newField: ((
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /fieldsets/new(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const newFieldset: ((
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /fieldset_associations/new(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const newFieldsetAssociation: ((
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /ip_leases/new(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const newIpLease: ((
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /hardware/new(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const newItem: ((
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /hardware/:item_id/nics/new(.:format)
 * @param {any} itemId
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const newItemNic: ((
  itemId: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /licenses/new(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const newLicense: ((
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /locations/new(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const newLocation: ((
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /locations/:location_id/contacts/new(.:format)
 * @param {any} locationId
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const newLocationContact: ((
  locationId: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /locations/:location_id/contacts/:contact_id/addresses/new(.:format)
 * @param {any} locationId
 * @param {any} contactId
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const newLocationContactAddress: ((
  locationId: RequiredRouteParameter,
  contactId: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /locations/:location_id/contacts/:contact_id/emails/new(.:format)
 * @param {any} locationId
 * @param {any} contactId
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const newLocationContactEmail: ((
  locationId: RequiredRouteParameter,
  contactId: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /locations/:location_id/contacts/:contact_id/phones/new(.:format)
 * @param {any} locationId
 * @param {any} contactId
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const newLocationContactPhone: ((
  locationId: RequiredRouteParameter,
  contactId: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /locations/:location_id/contacts/:contact_id/websites/new(.:format)
 * @param {any} locationId
 * @param {any} contactId
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const newLocationContactWebsite: ((
  locationId: RequiredRouteParameter,
  contactId: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /manufacturers/new(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const newManufacturer: ((
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /manufacturers/:manufacturer_id/contacts/new(.:format)
 * @param {any} manufacturerId
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const newManufacturerContact: ((
  manufacturerId: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /manufacturers/:manufacturer_id/contacts/:contact_id/addresses/new(.:format)
 * @param {any} manufacturerId
 * @param {any} contactId
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const newManufacturerContactAddress: ((
  manufacturerId: RequiredRouteParameter,
  contactId: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /manufacturers/:manufacturer_id/contacts/:contact_id/emails/new(.:format)
 * @param {any} manufacturerId
 * @param {any} contactId
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const newManufacturerContactEmail: ((
  manufacturerId: RequiredRouteParameter,
  contactId: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /manufacturers/:manufacturer_id/contacts/:contact_id/phones/new(.:format)
 * @param {any} manufacturerId
 * @param {any} contactId
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const newManufacturerContactPhone: ((
  manufacturerId: RequiredRouteParameter,
  contactId: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /manufacturers/:manufacturer_id/contacts/:contact_id/websites/new(.:format)
 * @param {any} manufacturerId
 * @param {any} contactId
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const newManufacturerContactWebsite: ((
  manufacturerId: RequiredRouteParameter,
  contactId: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /models/new(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const newModel: ((
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /networks/new(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const newNetwork: ((
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /orders/new(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const newOrder: ((
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /ownerships/new(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const newOwnership: ((
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /people/new(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const newPerson: ((
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /people/:person_id/contacts/new(.:format)
 * @param {any} personId
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const newPersonContact: ((
  personId: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /people/:person_id/contacts/:contact_id/addresses/new(.:format)
 * @param {any} personId
 * @param {any} contactId
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const newPersonContactAddress: ((
  personId: RequiredRouteParameter,
  contactId: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /people/:person_id/contacts/:contact_id/emails/new(.:format)
 * @param {any} personId
 * @param {any} contactId
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const newPersonContactEmail: ((
  personId: RequiredRouteParameter,
  contactId: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /people/:person_id/contacts/:contact_id/phones/new(.:format)
 * @param {any} personId
 * @param {any} contactId
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const newPersonContactPhone: ((
  personId: RequiredRouteParameter,
  contactId: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /people/:person_id/contacts/:contact_id/websites/new(.:format)
 * @param {any} personId
 * @param {any} contactId
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const newPersonContactWebsite: ((
  personId: RequiredRouteParameter,
  contactId: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /purchases/new(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const newPurchase: ((
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /status_types/new(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const newStatusType: ((
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /users/new(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const newUser: ((
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /users/confirmation/new(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const newUserConfirmation: ((
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /users/password/new(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const newUserPassword: ((
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /users/register(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const newUserRegistration: ((
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /login(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const newUserSession: ((
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /users/unlock/new(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const newUserUnlock: ((
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /vendors/new(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const newVendor: ((
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /vendors/:vendor_id/contacts/new(.:format)
 * @param {any} vendorId
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const newVendorContact: ((
  vendorId: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /vendors/:vendor_id/contacts/:contact_id/addresses/new(.:format)
 * @param {any} vendorId
 * @param {any} contactId
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const newVendorContactAddress: ((
  vendorId: RequiredRouteParameter,
  contactId: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /vendors/:vendor_id/contacts/:contact_id/emails/new(.:format)
 * @param {any} vendorId
 * @param {any} contactId
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const newVendorContactEmail: ((
  vendorId: RequiredRouteParameter,
  contactId: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /vendors/:vendor_id/contacts/:contact_id/phones/new(.:format)
 * @param {any} vendorId
 * @param {any} contactId
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const newVendorContactPhone: ((
  vendorId: RequiredRouteParameter,
  contactId: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /vendors/:vendor_id/contacts/:contact_id/websites/new(.:format)
 * @param {any} vendorId
 * @param {any} contactId
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const newVendorContactWebsite: ((
  vendorId: RequiredRouteParameter,
  contactId: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /warranties/new(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const newWarranty: ((
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /warranties/:warranty_id/contacts/new(.:format)
 * @param {any} warrantyId
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const newWarrantyContact: ((
  warrantyId: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /warranties/:warranty_id/contacts/:contact_id/addresses/new(.:format)
 * @param {any} warrantyId
 * @param {any} contactId
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const newWarrantyContactAddress: ((
  warrantyId: RequiredRouteParameter,
  contactId: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /warranties/:warranty_id/contacts/:contact_id/emails/new(.:format)
 * @param {any} warrantyId
 * @param {any} contactId
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const newWarrantyContactEmail: ((
  warrantyId: RequiredRouteParameter,
  contactId: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /warranties/:warranty_id/contacts/:contact_id/phones/new(.:format)
 * @param {any} warrantyId
 * @param {any} contactId
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const newWarrantyContactPhone: ((
  warrantyId: RequiredRouteParameter,
  contactId: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /warranties/:warranty_id/contacts/:contact_id/websites/new(.:format)
 * @param {any} warrantyId
 * @param {any} contactId
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const newWarrantyContactWebsite: ((
  warrantyId: RequiredRouteParameter,
  contactId: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /orders/:id(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const order: ((
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /orders(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const orders: ((
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /ownerships/:id(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const ownership: ((
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /ownerships(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const ownerships: ((
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /people(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const people: ((
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /people/:id(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const person: ((
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /people/:person_id/contacts/:id(.:format)
 * @param {any} personId
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const personContact: ((
  personId: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /people/:person_id/contacts/:contact_id/addresses/:id(.:format)
 * @param {any} personId
 * @param {any} contactId
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const personContactAddress: ((
  personId: RequiredRouteParameter,
  contactId: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /people/:person_id/contacts/:contact_id/addresses(.:format)
 * @param {any} personId
 * @param {any} contactId
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const personContactAddresses: ((
  personId: RequiredRouteParameter,
  contactId: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /people/:person_id/contacts/:contact_id/emails/:id(.:format)
 * @param {any} personId
 * @param {any} contactId
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const personContactEmail: ((
  personId: RequiredRouteParameter,
  contactId: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /people/:person_id/contacts/:contact_id/emails(.:format)
 * @param {any} personId
 * @param {any} contactId
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const personContactEmails: ((
  personId: RequiredRouteParameter,
  contactId: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /people/:person_id/contacts/:contact_id/phones/:id(.:format)
 * @param {any} personId
 * @param {any} contactId
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const personContactPhone: ((
  personId: RequiredRouteParameter,
  contactId: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /people/:person_id/contacts/:contact_id/phones(.:format)
 * @param {any} personId
 * @param {any} contactId
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const personContactPhones: ((
  personId: RequiredRouteParameter,
  contactId: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /people/:person_id/contacts/:contact_id/websites/:id(.:format)
 * @param {any} personId
 * @param {any} contactId
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const personContactWebsite: ((
  personId: RequiredRouteParameter,
  contactId: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /people/:person_id/contacts/:contact_id/websites(.:format)
 * @param {any} personId
 * @param {any} contactId
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const personContactWebsites: ((
  personId: RequiredRouteParameter,
  contactId: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /people/:person_id/contacts(.:format)
 * @param {any} personId
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const personContacts: ((
  personId: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /purchases/:id(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const purchase: ((
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /purchases(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const purchases: ((
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const root: ((
  options?: {} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /settings(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const settings: ((
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /status_types/:id(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const statusType: ((
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /status_types(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const statusTypes: ((
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /rails/active_storage/disk/:encoded_token(.:format)
 * @param {any} encodedToken
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const updateRailsDiskService: ((
  encodedToken: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /users/:id(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const user: ((
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /users/confirmation(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const userConfirmation: ((
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /users/password(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const userPassword: ((
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /users(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const userRegistration: ((
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /login(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const userSession: ((
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /users/unlock(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const userUnlock: ((
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /users(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const users: ((
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /vendors/:id(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const vendor: ((
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /vendors/:vendor_id/contacts/:id(.:format)
 * @param {any} vendorId
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const vendorContact: ((
  vendorId: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /vendors/:vendor_id/contacts/:contact_id/addresses/:id(.:format)
 * @param {any} vendorId
 * @param {any} contactId
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const vendorContactAddress: ((
  vendorId: RequiredRouteParameter,
  contactId: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /vendors/:vendor_id/contacts/:contact_id/addresses(.:format)
 * @param {any} vendorId
 * @param {any} contactId
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const vendorContactAddresses: ((
  vendorId: RequiredRouteParameter,
  contactId: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /vendors/:vendor_id/contacts/:contact_id/emails/:id(.:format)
 * @param {any} vendorId
 * @param {any} contactId
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const vendorContactEmail: ((
  vendorId: RequiredRouteParameter,
  contactId: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /vendors/:vendor_id/contacts/:contact_id/emails(.:format)
 * @param {any} vendorId
 * @param {any} contactId
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const vendorContactEmails: ((
  vendorId: RequiredRouteParameter,
  contactId: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /vendors/:vendor_id/contacts/:contact_id/phones/:id(.:format)
 * @param {any} vendorId
 * @param {any} contactId
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const vendorContactPhone: ((
  vendorId: RequiredRouteParameter,
  contactId: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /vendors/:vendor_id/contacts/:contact_id/phones(.:format)
 * @param {any} vendorId
 * @param {any} contactId
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const vendorContactPhones: ((
  vendorId: RequiredRouteParameter,
  contactId: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /vendors/:vendor_id/contacts/:contact_id/websites/:id(.:format)
 * @param {any} vendorId
 * @param {any} contactId
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const vendorContactWebsite: ((
  vendorId: RequiredRouteParameter,
  contactId: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /vendors/:vendor_id/contacts/:contact_id/websites(.:format)
 * @param {any} vendorId
 * @param {any} contactId
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const vendorContactWebsites: ((
  vendorId: RequiredRouteParameter,
  contactId: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /vendors/:vendor_id/contacts(.:format)
 * @param {any} vendorId
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const vendorContacts: ((
  vendorId: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /vendors(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const vendors: ((
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /warranties(.:format)
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const warranties: ((
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /warranties/:id(.:format)
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const warranty: ((
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /warranties/:warranty_id/contacts/:id(.:format)
 * @param {any} warrantyId
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const warrantyContact: ((
  warrantyId: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /warranties/:warranty_id/contacts/:contact_id/addresses/:id(.:format)
 * @param {any} warrantyId
 * @param {any} contactId
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const warrantyContactAddress: ((
  warrantyId: RequiredRouteParameter,
  contactId: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /warranties/:warranty_id/contacts/:contact_id/addresses(.:format)
 * @param {any} warrantyId
 * @param {any} contactId
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const warrantyContactAddresses: ((
  warrantyId: RequiredRouteParameter,
  contactId: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /warranties/:warranty_id/contacts/:contact_id/emails/:id(.:format)
 * @param {any} warrantyId
 * @param {any} contactId
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const warrantyContactEmail: ((
  warrantyId: RequiredRouteParameter,
  contactId: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /warranties/:warranty_id/contacts/:contact_id/emails(.:format)
 * @param {any} warrantyId
 * @param {any} contactId
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const warrantyContactEmails: ((
  warrantyId: RequiredRouteParameter,
  contactId: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /warranties/:warranty_id/contacts/:contact_id/phones/:id(.:format)
 * @param {any} warrantyId
 * @param {any} contactId
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const warrantyContactPhone: ((
  warrantyId: RequiredRouteParameter,
  contactId: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /warranties/:warranty_id/contacts/:contact_id/phones(.:format)
 * @param {any} warrantyId
 * @param {any} contactId
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const warrantyContactPhones: ((
  warrantyId: RequiredRouteParameter,
  contactId: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /warranties/:warranty_id/contacts/:contact_id/websites/:id(.:format)
 * @param {any} warrantyId
 * @param {any} contactId
 * @param {any} id
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const warrantyContactWebsite: ((
  warrantyId: RequiredRouteParameter,
  contactId: RequiredRouteParameter,
  id: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /warranties/:warranty_id/contacts/:contact_id/websites(.:format)
 * @param {any} warrantyId
 * @param {any} contactId
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const warrantyContactWebsites: ((
  warrantyId: RequiredRouteParameter,
  contactId: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

/**
 * Generates rails route to
 * /warranties/:warranty_id/contacts(.:format)
 * @param {any} warrantyId
 * @param {object | undefined} options
 * @returns {string} route path
 */
export const warrantyContacts: ((
  warrantyId: RequiredRouteParameter,
  options?: {format?: OptionalRouteParameter} & RouteOptions
) => string) & RouteHelperExtras;

// By some reason this line prevents all types in a file
// from being automatically exported
export {};
