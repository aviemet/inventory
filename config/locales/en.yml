# Files in the config/locales directory are used for internationalization
# and are automatically loaded by Rails. If you want to use locales other
# than English, add the necessary files in this directory.
#
# To use the locales, use `I18n.t`:
#
#     I18n.t "hello"
#
# In views, this is aliased to just `t`:
#
#     <%= t("hello") %>
#
# To use a different locale, set it with `I18n.locale`:
#
#     I18n.locale = :es
#
# This would use the information in config/locales/es.yml.
#
# The following keys must be escaped otherwise they will not be retrieved by
# the default I18n backend:
#
# true, false, on, off, yes, no
#
# Instead, surround them with single quotes.
#
# en:
#   "true": "foo"
#
# To learn more, please read the Rails Internationalization guide
# available at https://guides.rubyonrails.org/i18n.html.

en:
  activerecord:
    errors:
      messages:
        taken: "There is already an account for this address, please log in instead"
        
  errors:
    # The values :model, :attribute and :value are always available for interpolation
    # The value :count is available when applicable. Can be used for pluralization.
    messages:
      model_invalid: "Validation failed: %{errors}"
      inclusion: "Doesn't exist"
      exclusion: "Is reserved"
      invalid: "Not valid"
      confirmation: "Doesn't match %{attribute}"
      accepted: "Must be accepted"
      empty: "Can't be empty"
      blank: "Can't be blank"
      present: "Must be blank"
      too_long:
        one: "Too long (maximum is 1 character)"
        other: "Too long (maximum is %{count} characters)"
      password_too_long: "Too long"
      too_short:
        one: "Too short (minimum is 1 character)"
        other: "Too short (minimum is %{count} characters)"
      wrong_length:
        one: "Wrong length (should be 1 character)"
        other: "Wrong length (should be %{count} characters)"
      not_a_number: "Must be a number"
      not_an_integer: "Must be an integer"
      greater_than: "Must be greater than %{count}"
      greater_than_or_equal_to: "Must be greater than or equal to %{count}"
      equal_to: "Must be equal to %{count}"
      less_than: "Must be less than %{count}"
      less_than_or_equal_to: "Must be less than or equal to %{count}"
      other_than: "Must be other than %{count}"
      in: "Must be in %{count}"
      odd: "Must be odd"
      even: "Must be even"
